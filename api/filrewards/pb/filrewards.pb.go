// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: api/filrewards/pb/filrewards.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Reward int32

const (
	Reward_REWARD_UNSPECIFIED                  Reward = 0
	Reward_REWARD_FIRST_KEY_ACCOUNT_CREATED    Reward = 1
	Reward_REWARD_FIRST_KEY_USER_CREATED       Reward = 2 // does this fit "register first user?"
	Reward_REWARD_FIRST_ORG_CREATED            Reward = 3
	Reward_REWARD_INITIAL_BILLING_SETUP        Reward = 4
	Reward_REWARD_FIRST_BUCKET_CREATED         Reward = 5
	Reward_REWARD_FIRST_BUCKET_ARCHIVE_CREATED Reward = 6
	Reward_REWARD_FIRST_MAILBOX_CREATED        Reward = 7
	Reward_REWARD_FIRST_THREAD_DB_CREATED      Reward = 8
)

// Enum value maps for Reward.
var (
	Reward_name = map[int32]string{
		0: "REWARD_UNSPECIFIED",
		1: "REWARD_FIRST_KEY_ACCOUNT_CREATED",
		2: "REWARD_FIRST_KEY_USER_CREATED",
		3: "REWARD_FIRST_ORG_CREATED",
		4: "REWARD_INITIAL_BILLING_SETUP",
		5: "REWARD_FIRST_BUCKET_CREATED",
		6: "REWARD_FIRST_BUCKET_ARCHIVE_CREATED",
		7: "REWARD_FIRST_MAILBOX_CREATED",
		8: "REWARD_FIRST_THREAD_DB_CREATED",
	}
	Reward_value = map[string]int32{
		"REWARD_UNSPECIFIED":                  0,
		"REWARD_FIRST_KEY_ACCOUNT_CREATED":    1,
		"REWARD_FIRST_KEY_USER_CREATED":       2,
		"REWARD_FIRST_ORG_CREATED":            3,
		"REWARD_INITIAL_BILLING_SETUP":        4,
		"REWARD_FIRST_BUCKET_CREATED":         5,
		"REWARD_FIRST_BUCKET_ARCHIVE_CREATED": 6,
		"REWARD_FIRST_MAILBOX_CREATED":        7,
		"REWARD_FIRST_THREAD_DB_CREATED":      8,
	}
)

func (x Reward) Enum() *Reward {
	p := new(Reward)
	*p = x
	return p
}

func (x Reward) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Reward) Descriptor() protoreflect.EnumDescriptor {
	return file_api_filrewards_pb_filrewards_proto_enumTypes[0].Descriptor()
}

func (Reward) Type() protoreflect.EnumType {
	return &file_api_filrewards_pb_filrewards_proto_enumTypes[0]
}

func (x Reward) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Reward.Descriptor instead.
func (Reward) EnumDescriptor() ([]byte, []int) {
	return file_api_filrewards_pb_filrewards_proto_rawDescGZIP(), []int{0}
}

type ClaimedFilter int32

const (
	ClaimedFilter_CLAIMED_FILTER_UNSPECIFIED ClaimedFilter = 0
	ClaimedFilter_CLAIMED_FILTER_CLAIMED     ClaimedFilter = 1
	ClaimedFilter_CLAIMED_FILTER_UNCLAIMED   ClaimedFilter = 2
)

// Enum value maps for ClaimedFilter.
var (
	ClaimedFilter_name = map[int32]string{
		0: "CLAIMED_FILTER_UNSPECIFIED",
		1: "CLAIMED_FILTER_CLAIMED",
		2: "CLAIMED_FILTER_UNCLAIMED",
	}
	ClaimedFilter_value = map[string]int32{
		"CLAIMED_FILTER_UNSPECIFIED": 0,
		"CLAIMED_FILTER_CLAIMED":     1,
		"CLAIMED_FILTER_UNCLAIMED":   2,
	}
)

func (x ClaimedFilter) Enum() *ClaimedFilter {
	p := new(ClaimedFilter)
	*p = x
	return p
}

func (x ClaimedFilter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClaimedFilter) Descriptor() protoreflect.EnumDescriptor {
	return file_api_filrewards_pb_filrewards_proto_enumTypes[1].Descriptor()
}

func (ClaimedFilter) Type() protoreflect.EnumType {
	return &file_api_filrewards_pb_filrewards_proto_enumTypes[1]
}

func (x ClaimedFilter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClaimedFilter.Descriptor instead.
func (ClaimedFilter) EnumDescriptor() ([]byte, []int) {
	return file_api_filrewards_pb_filrewards_proto_rawDescGZIP(), []int{1}
}

type RewardRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key               string               `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	AccountType       int32                `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	Reward            Reward               `protobuf:"varint,3,opt,name=reward,proto3,enum=api.filrewards.pb.Reward" json:"reward,omitempty"`
	Factor            int32                `protobuf:"varint,4,opt,name=factor,proto3" json:"factor,omitempty"`
	BaseAttoFilReward int32                `protobuf:"varint,5,opt,name=base_atto_fil_reward,json=baseAttoFilReward,proto3" json:"base_atto_fil_reward,omitempty"`
	CreatedAt         *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ClaimedAt         *timestamp.Timestamp `protobuf:"bytes,7,opt,name=claimed_at,json=claimedAt,proto3" json:"claimed_at,omitempty"`
}

func (x *RewardRecord) Reset() {
	*x = RewardRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardRecord) ProtoMessage() {}

func (x *RewardRecord) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardRecord.ProtoReflect.Descriptor instead.
func (*RewardRecord) Descriptor() ([]byte, []int) {
	return file_api_filrewards_pb_filrewards_proto_rawDescGZIP(), []int{0}
}

func (x *RewardRecord) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RewardRecord) GetAccountType() int32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *RewardRecord) GetReward() Reward {
	if x != nil {
		return x.Reward
	}
	return Reward_REWARD_UNSPECIFIED
}

func (x *RewardRecord) GetFactor() int32 {
	if x != nil {
		return x.Factor
	}
	return 0
}

func (x *RewardRecord) GetBaseAttoFilReward() int32 {
	if x != nil {
		return x.BaseAttoFilReward
	}
	return 0
}

func (x *RewardRecord) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RewardRecord) GetClaimedAt() *timestamp.Timestamp {
	if x != nil {
		return x.ClaimedAt
	}
	return nil
}

type ProcessAnalyticsEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key            string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	AccountType    int32  `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	AnalyticsEvent int32  `protobuf:"varint,3,opt,name=analytics_event,json=analyticsEvent,proto3" json:"analytics_event,omitempty"`
}

func (x *ProcessAnalyticsEventRequest) Reset() {
	*x = ProcessAnalyticsEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessAnalyticsEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessAnalyticsEventRequest) ProtoMessage() {}

func (x *ProcessAnalyticsEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessAnalyticsEventRequest.ProtoReflect.Descriptor instead.
func (*ProcessAnalyticsEventRequest) Descriptor() ([]byte, []int) {
	return file_api_filrewards_pb_filrewards_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessAnalyticsEventRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ProcessAnalyticsEventRequest) GetAccountType() int32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *ProcessAnalyticsEventRequest) GetAnalyticsEvent() int32 {
	if x != nil {
		return x.AnalyticsEvent
	}
	return 0
}

type ProcessAnalyticsEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardRecord *RewardRecord `protobuf:"bytes,1,opt,name=reward_record,json=rewardRecord,proto3" json:"reward_record,omitempty"`
}

func (x *ProcessAnalyticsEventResponse) Reset() {
	*x = ProcessAnalyticsEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessAnalyticsEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessAnalyticsEventResponse) ProtoMessage() {}

func (x *ProcessAnalyticsEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessAnalyticsEventResponse.ProtoReflect.Descriptor instead.
func (*ProcessAnalyticsEventResponse) Descriptor() ([]byte, []int) {
	return file_api_filrewards_pb_filrewards_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessAnalyticsEventResponse) GetRewardRecord() *RewardRecord {
	if x != nil {
		return x.RewardRecord
	}
	return nil
}

type ClaimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Reward Reward `protobuf:"varint,2,opt,name=reward,proto3,enum=api.filrewards.pb.Reward" json:"reward,omitempty"`
}

func (x *ClaimRequest) Reset() {
	*x = ClaimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimRequest) ProtoMessage() {}

func (x *ClaimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimRequest.ProtoReflect.Descriptor instead.
func (*ClaimRequest) Descriptor() ([]byte, []int) {
	return file_api_filrewards_pb_filrewards_proto_rawDescGZIP(), []int{3}
}

func (x *ClaimRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ClaimRequest) GetReward() Reward {
	if x != nil {
		return x.Reward
	}
	return Reward_REWARD_UNSPECIFIED
}

type ClaimResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClaimResponse) Reset() {
	*x = ClaimResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimResponse) ProtoMessage() {}

func (x *ClaimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimResponse.ProtoReflect.Descriptor instead.
func (*ClaimResponse) Descriptor() ([]byte, []int) {
	return file_api_filrewards_pb_filrewards_proto_rawDescGZIP(), []int{4}
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyFilter     string               `protobuf:"bytes,1,opt,name=key_filter,json=keyFilter,proto3" json:"key_filter,omitempty"`
	RewardFilter  Reward               `protobuf:"varint,2,opt,name=reward_filter,json=rewardFilter,proto3,enum=api.filrewards.pb.Reward" json:"reward_filter,omitempty"`
	ClaimedFilter ClaimedFilter        `protobuf:"varint,3,opt,name=claimed_filter,json=claimedFilter,proto3,enum=api.filrewards.pb.ClaimedFilter" json:"claimed_filter,omitempty"`
	Ascending     bool                 `protobuf:"varint,4,opt,name=ascending,proto3" json:"ascending,omitempty"`
	StartAt       *timestamp.Timestamp `protobuf:"bytes,5,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	Limit         int64                `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_api_filrewards_pb_filrewards_proto_rawDescGZIP(), []int{5}
}

func (x *ListRequest) GetKeyFilter() string {
	if x != nil {
		return x.KeyFilter
	}
	return ""
}

func (x *ListRequest) GetRewardFilter() Reward {
	if x != nil {
		return x.RewardFilter
	}
	return Reward_REWARD_UNSPECIFIED
}

func (x *ListRequest) GetClaimedFilter() ClaimedFilter {
	if x != nil {
		return x.ClaimedFilter
	}
	return ClaimedFilter_CLAIMED_FILTER_UNSPECIFIED
}

func (x *ListRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

func (x *ListRequest) GetStartAt() *timestamp.Timestamp {
	if x != nil {
		return x.StartAt
	}
	return nil
}

func (x *ListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardRecords []*RewardRecord      `protobuf:"bytes,1,rep,name=reward_records,json=rewardRecords,proto3" json:"reward_records,omitempty"`
	More          bool                 `protobuf:"varint,2,opt,name=more,proto3" json:"more,omitempty"`
	MoreStartAt   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=more_start_at,json=moreStartAt,proto3" json:"more_start_at,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_api_filrewards_pb_filrewards_proto_rawDescGZIP(), []int{6}
}

func (x *ListResponse) GetRewardRecords() []*RewardRecord {
	if x != nil {
		return x.RewardRecords
	}
	return nil
}

func (x *ListResponse) GetMore() bool {
	if x != nil {
		return x.More
	}
	return false
}

func (x *ListResponse) GetMoreStartAt() *timestamp.Timestamp {
	if x != nil {
		return x.MoreStartAt
	}
	return nil
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Reward Reward `protobuf:"varint,2,opt,name=reward,proto3,enum=api.filrewards.pb.Reward" json:"reward,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_api_filrewards_pb_filrewards_proto_rawDescGZIP(), []int{7}
}

func (x *GetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetRequest) GetReward() Reward {
	if x != nil {
		return x.Reward
	}
	return Reward_REWARD_UNSPECIFIED
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardRecord *RewardRecord `protobuf:"bytes,1,opt,name=reward_record,json=rewardRecord,proto3" json:"reward_record,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewards_pb_filrewards_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_api_filrewards_pb_filrewards_proto_rawDescGZIP(), []int{8}
}

func (x *GetResponse) GetRewardRecord() *RewardRecord {
	if x != nil {
		return x.RewardRecord
	}
	return nil
}

var File_api_filrewards_pb_filrewards_proto protoreflect.FileDescriptor

var file_api_filrewards_pb_filrewards_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x2f, 0x70, 0x62, 0x2f, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31,
	0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x14, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x61, 0x74, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x62, 0x61, 0x73, 0x65, 0x41, 0x74, 0x74,
	0x6f, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x7c, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x65,
	0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x53, 0x0a, 0x0c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69,
	0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa0, 0x02, 0x0a, 0x0b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6b,
	0x65, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6b, 0x65, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0d, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0c, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0e, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x35, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xaa,
	0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69,
	0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6d, 0x6f, 0x72, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x6d,
	0x6f, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x6d, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x22, 0x51, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x06, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x53,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2a, 0xb9, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x16,
	0x0a, 0x12, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44,
	0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d,
	0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x4b, 0x45, 0x59,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x1c, 0x0a, 0x18, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f,
	0x4f, 0x52, 0x47, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x20, 0x0a,
	0x1c, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x5f,
	0x42, 0x49, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x45, 0x54, 0x55, 0x50, 0x10, 0x04, 0x12,
	0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f,
	0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x05,
	0x12, 0x27, 0x0a, 0x23, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54,
	0x5f, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45, 0x57,
	0x41, 0x52, 0x44, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x42, 0x4f,
	0x58, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x22, 0x0a, 0x1e, 0x52,
	0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x54, 0x48, 0x52, 0x45,
	0x41, 0x44, 0x5f, 0x44, 0x42, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x08, 0x2a,
	0x69, 0x0a, 0x0d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x45, 0x44, 0x5f, 0x46, 0x49, 0x4c, 0x54,
	0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x45, 0x44, 0x5f, 0x46, 0x49, 0x4c, 0x54,
	0x45, 0x52, 0x5f, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18,
	0x43, 0x4c, 0x41, 0x49, 0x4d, 0x45, 0x44, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x55,
	0x4e, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x45, 0x44, 0x10, 0x02, 0x32, 0xf2, 0x02, 0x0a, 0x11, 0x46,
	0x69, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x7c, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x05, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69,
	0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65,
	0x78, 0x74, 0x69, 0x6c, 0x65, 0x69, 0x6f, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x2f,
	0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_filrewards_pb_filrewards_proto_rawDescOnce sync.Once
	file_api_filrewards_pb_filrewards_proto_rawDescData = file_api_filrewards_pb_filrewards_proto_rawDesc
)

func file_api_filrewards_pb_filrewards_proto_rawDescGZIP() []byte {
	file_api_filrewards_pb_filrewards_proto_rawDescOnce.Do(func() {
		file_api_filrewards_pb_filrewards_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_filrewards_pb_filrewards_proto_rawDescData)
	})
	return file_api_filrewards_pb_filrewards_proto_rawDescData
}

var file_api_filrewards_pb_filrewards_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_filrewards_pb_filrewards_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_filrewards_pb_filrewards_proto_goTypes = []interface{}{
	(Reward)(0),                           // 0: api.filrewards.pb.Reward
	(ClaimedFilter)(0),                    // 1: api.filrewards.pb.ClaimedFilter
	(*RewardRecord)(nil),                  // 2: api.filrewards.pb.RewardRecord
	(*ProcessAnalyticsEventRequest)(nil),  // 3: api.filrewards.pb.ProcessAnalyticsEventRequest
	(*ProcessAnalyticsEventResponse)(nil), // 4: api.filrewards.pb.ProcessAnalyticsEventResponse
	(*ClaimRequest)(nil),                  // 5: api.filrewards.pb.ClaimRequest
	(*ClaimResponse)(nil),                 // 6: api.filrewards.pb.ClaimResponse
	(*ListRequest)(nil),                   // 7: api.filrewards.pb.ListRequest
	(*ListResponse)(nil),                  // 8: api.filrewards.pb.ListResponse
	(*GetRequest)(nil),                    // 9: api.filrewards.pb.GetRequest
	(*GetResponse)(nil),                   // 10: api.filrewards.pb.GetResponse
	(*timestamp.Timestamp)(nil),           // 11: google.protobuf.Timestamp
}
var file_api_filrewards_pb_filrewards_proto_depIdxs = []int32{
	0,  // 0: api.filrewards.pb.RewardRecord.reward:type_name -> api.filrewards.pb.Reward
	11, // 1: api.filrewards.pb.RewardRecord.created_at:type_name -> google.protobuf.Timestamp
	11, // 2: api.filrewards.pb.RewardRecord.claimed_at:type_name -> google.protobuf.Timestamp
	2,  // 3: api.filrewards.pb.ProcessAnalyticsEventResponse.reward_record:type_name -> api.filrewards.pb.RewardRecord
	0,  // 4: api.filrewards.pb.ClaimRequest.reward:type_name -> api.filrewards.pb.Reward
	0,  // 5: api.filrewards.pb.ListRequest.reward_filter:type_name -> api.filrewards.pb.Reward
	1,  // 6: api.filrewards.pb.ListRequest.claimed_filter:type_name -> api.filrewards.pb.ClaimedFilter
	11, // 7: api.filrewards.pb.ListRequest.start_at:type_name -> google.protobuf.Timestamp
	2,  // 8: api.filrewards.pb.ListResponse.reward_records:type_name -> api.filrewards.pb.RewardRecord
	11, // 9: api.filrewards.pb.ListResponse.more_start_at:type_name -> google.protobuf.Timestamp
	0,  // 10: api.filrewards.pb.GetRequest.reward:type_name -> api.filrewards.pb.Reward
	2,  // 11: api.filrewards.pb.GetResponse.reward_record:type_name -> api.filrewards.pb.RewardRecord
	3,  // 12: api.filrewards.pb.FilRewardsService.ProcessAnalyticsEvent:input_type -> api.filrewards.pb.ProcessAnalyticsEventRequest
	5,  // 13: api.filrewards.pb.FilRewardsService.Claim:input_type -> api.filrewards.pb.ClaimRequest
	7,  // 14: api.filrewards.pb.FilRewardsService.List:input_type -> api.filrewards.pb.ListRequest
	9,  // 15: api.filrewards.pb.FilRewardsService.Get:input_type -> api.filrewards.pb.GetRequest
	4,  // 16: api.filrewards.pb.FilRewardsService.ProcessAnalyticsEvent:output_type -> api.filrewards.pb.ProcessAnalyticsEventResponse
	6,  // 17: api.filrewards.pb.FilRewardsService.Claim:output_type -> api.filrewards.pb.ClaimResponse
	8,  // 18: api.filrewards.pb.FilRewardsService.List:output_type -> api.filrewards.pb.ListResponse
	10, // 19: api.filrewards.pb.FilRewardsService.Get:output_type -> api.filrewards.pb.GetResponse
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_filrewards_pb_filrewards_proto_init() }
func file_api_filrewards_pb_filrewards_proto_init() {
	if File_api_filrewards_pb_filrewards_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_filrewards_pb_filrewards_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewards_pb_filrewards_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessAnalyticsEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewards_pb_filrewards_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessAnalyticsEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewards_pb_filrewards_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewards_pb_filrewards_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewards_pb_filrewards_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewards_pb_filrewards_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewards_pb_filrewards_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewards_pb_filrewards_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_filrewards_pb_filrewards_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_filrewards_pb_filrewards_proto_goTypes,
		DependencyIndexes: file_api_filrewards_pb_filrewards_proto_depIdxs,
		EnumInfos:         file_api_filrewards_pb_filrewards_proto_enumTypes,
		MessageInfos:      file_api_filrewards_pb_filrewards_proto_msgTypes,
	}.Build()
	File_api_filrewards_pb_filrewards_proto = out.File
	file_api_filrewards_pb_filrewards_proto_rawDesc = nil
	file_api_filrewards_pb_filrewards_proto_goTypes = nil
	file_api_filrewards_pb_filrewards_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FilRewardsServiceClient is the client API for FilRewardsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FilRewardsServiceClient interface {
	ProcessAnalyticsEvent(ctx context.Context, in *ProcessAnalyticsEventRequest, opts ...grpc.CallOption) (*ProcessAnalyticsEventResponse, error)
	Claim(ctx context.Context, in *ClaimRequest, opts ...grpc.CallOption) (*ClaimResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
}

type filRewardsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFilRewardsServiceClient(cc grpc.ClientConnInterface) FilRewardsServiceClient {
	return &filRewardsServiceClient{cc}
}

func (c *filRewardsServiceClient) ProcessAnalyticsEvent(ctx context.Context, in *ProcessAnalyticsEventRequest, opts ...grpc.CallOption) (*ProcessAnalyticsEventResponse, error) {
	out := new(ProcessAnalyticsEventResponse)
	err := c.cc.Invoke(ctx, "/api.filrewards.pb.FilRewardsService/ProcessAnalyticsEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filRewardsServiceClient) Claim(ctx context.Context, in *ClaimRequest, opts ...grpc.CallOption) (*ClaimResponse, error) {
	out := new(ClaimResponse)
	err := c.cc.Invoke(ctx, "/api.filrewards.pb.FilRewardsService/Claim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filRewardsServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/api.filrewards.pb.FilRewardsService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filRewardsServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/api.filrewards.pb.FilRewardsService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FilRewardsServiceServer is the server API for FilRewardsService service.
type FilRewardsServiceServer interface {
	ProcessAnalyticsEvent(context.Context, *ProcessAnalyticsEventRequest) (*ProcessAnalyticsEventResponse, error)
	Claim(context.Context, *ClaimRequest) (*ClaimResponse, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
}

// UnimplementedFilRewardsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFilRewardsServiceServer struct {
}

func (*UnimplementedFilRewardsServiceServer) ProcessAnalyticsEvent(context.Context, *ProcessAnalyticsEventRequest) (*ProcessAnalyticsEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessAnalyticsEvent not implemented")
}
func (*UnimplementedFilRewardsServiceServer) Claim(context.Context, *ClaimRequest) (*ClaimResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Claim not implemented")
}
func (*UnimplementedFilRewardsServiceServer) List(context.Context, *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedFilRewardsServiceServer) Get(context.Context, *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterFilRewardsServiceServer(s *grpc.Server, srv FilRewardsServiceServer) {
	s.RegisterService(&_FilRewardsService_serviceDesc, srv)
}

func _FilRewardsService_ProcessAnalyticsEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessAnalyticsEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilRewardsServiceServer).ProcessAnalyticsEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.filrewards.pb.FilRewardsService/ProcessAnalyticsEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilRewardsServiceServer).ProcessAnalyticsEvent(ctx, req.(*ProcessAnalyticsEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilRewardsService_Claim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClaimRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilRewardsServiceServer).Claim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.filrewards.pb.FilRewardsService/Claim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilRewardsServiceServer).Claim(ctx, req.(*ClaimRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilRewardsService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilRewardsServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.filrewards.pb.FilRewardsService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilRewardsServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilRewardsService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilRewardsServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.filrewards.pb.FilRewardsService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilRewardsServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FilRewardsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.filrewards.pb.FilRewardsService",
	HandlerType: (*FilRewardsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProcessAnalyticsEvent",
			Handler:    _FilRewardsService_ProcessAnalyticsEvent_Handler,
		},
		{
			MethodName: "Claim",
			Handler:    _FilRewardsService_Claim_Handler,
		},
		{
			MethodName: "List",
			Handler:    _FilRewardsService_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _FilRewardsService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/filrewards/pb/filrewards.proto",
}
